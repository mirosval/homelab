apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: hyperdx-hdx-oss-v2
    app.kubernetes.io/instance: hyperdx
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hdx-oss-v2
    app.kubernetes.io/version: 2.6.0
    helm.sh/chart: hdx-oss-v2-0.7.3
  name: hyperdx-hdx-oss-v2-app
  namespace: hyperdx
spec:
  replicas: 1
  selector:
    matchLabels:
      app: hyperdx-hdx-oss-v2
      app.kubernetes.io/instance: hyperdx
      app.kubernetes.io/name: hdx-oss-v2
  template:
    metadata:
      labels:
        app: hyperdx-hdx-oss-v2
        app.kubernetes.io/instance: hyperdx
        app.kubernetes.io/name: hdx-oss-v2
    spec:
      containers:
        - env:
            - name: HYPERDX_API_KEY
              valueFrom:
                secretKeyRef:
                  key: api-key
                  name: hyperdx-hdx-oss-v2-app-secrets
            - name: DEFAULT_CONNECTIONS
              value: |
                [
                  {
                    "name": "Local ClickHouse",
                    "host": "http://hyperdx-hdx-oss-v2-clickhouse:8123",
                    "port": 8123,
                    "username": "app",
                    "password": "hyperdx"
                  }
                ]
            - name: DEFAULT_SOURCES
              value: |
                [
                  {
                    "from": {
                      "databaseName": "default",
                      "tableName": "otel_logs"
                    },
                    "kind": "log",
                    "timestampValueExpression": "TimestampTime",
                    "name": "Logs",
                    "displayedTimestampValueExpression": "Timestamp",
                    "implicitColumnExpression": "Body",
                    "serviceNameExpression": "ServiceName",
                    "bodyExpression": "Body",
                    "eventAttributesExpression": "LogAttributes",
                    "resourceAttributesExpression": "ResourceAttributes",
                    "defaultTableSelectExpression": "Timestamp,ServiceName,SeverityText,Body",
                    "severityTextExpression": "SeverityText",
                    "traceIdExpression": "TraceId",
                    "spanIdExpression": "SpanId",
                    "connection": "Local ClickHouse",
                    "traceSourceId": "Traces",
                    "sessionSourceId": "Sessions",
                    "metricSourceId": "Metrics"
                  },
                  {
                    "from": {
                      "databaseName": "default",
                      "tableName": "otel_traces"
                    },
                    "kind": "trace",
                    "timestampValueExpression": "Timestamp",
                    "name": "Traces",
                    "displayedTimestampValueExpression": "Timestamp",
                    "implicitColumnExpression": "SpanName",
                    "serviceNameExpression": "ServiceName",
                    "bodyExpression": "SpanName",
                    "eventAttributesExpression": "SpanAttributes",
                    "resourceAttributesExpression": "ResourceAttributes",
                    "defaultTableSelectExpression": "Timestamp,ServiceName,StatusCode,round(Duration/1e6),SpanName",
                    "traceIdExpression": "TraceId",
                    "spanIdExpression": "SpanId",
                    "durationExpression": "Duration",
                    "durationPrecision": 9,
                    "parentSpanIdExpression": "ParentSpanId",
                    "spanNameExpression": "SpanName",
                    "spanKindExpression": "SpanKind",
                    "statusCodeExpression": "StatusCode",
                    "statusMessageExpression": "StatusMessage",
                    "connection": "Local ClickHouse",
                    "logSourceId": "Logs",
                    "sessionSourceId": "Sessions",
                    "metricSourceId": "Metrics"
                  },
                  {
                    "from": {
                      "databaseName": "default",
                      "tableName": ""
                    },
                    "kind": "metric",
                    "timestampValueExpression": "TimeUnix",
                    "name": "Metrics",
                    "resourceAttributesExpression": "ResourceAttributes",
                    "metricTables": {
                      "gauge": "otel_metrics_gauge",
                      "histogram": "otel_metrics_histogram",
                      "sum": "otel_metrics_sum",
                      "_id": "682586a8b1f81924e628e808",
                      "id": "682586a8b1f81924e628e808"
                    },
                    "connection": "Local ClickHouse",
                    "logSourceId": "Logs",
                    "traceSourceId": "Traces",
                    "sessionSourceId": "Sessions"
                  },
                  {
                    "from": {
                      "databaseName": "default",
                      "tableName": "hyperdx_sessions"
                    },
                    "kind": "session",
                    "timestampValueExpression": "TimestampTime",
                    "name": "Sessions",
                    "displayedTimestampValueExpression": "Timestamp",
                    "implicitColumnExpression": "Body",
                    "serviceNameExpression": "ServiceName",
                    "bodyExpression": "Body",
                    "eventAttributesExpression": "LogAttributes",
                    "resourceAttributesExpression": "ResourceAttributes",
                    "defaultTableSelectExpression": "Timestamp,ServiceName,SeverityText,Body",
                    "severityTextExpression": "SeverityText",
                    "traceIdExpression": "TraceId",
                    "spanIdExpression": "SpanId",
                    "connection": "Local ClickHouse",
                    "logSourceId": "Logs",
                    "traceSourceId": "Traces",
                    "metricSourceId": "Metrics"
                  }
                ]
          envFrom:
            - configMapRef:
                name: hyperdx-hdx-oss-v2-app-config
          image: docker.hyperdx.io/hyperdx/hyperdx:2.6.0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 8000
            initialDelaySeconds: 10
            periodSeconds: 30
            timeoutSeconds: 5
          name: app
          ports:
            - containerPort: 3000
              name: app-port
            - containerPort: 8000
              name: api-port
            - containerPort: 4320
              name: opamp-port
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 8000
            initialDelaySeconds: 1
            periodSeconds: 10
            timeoutSeconds: 5
      initContainers:
        - command:
            - sh
            - -c
            - until nc -z hyperdx-hdx-oss-v2-mongodb 27017; do echo waiting for mongodb; sleep 2; done;
          image: busybox
          name: wait-for-mongodb
