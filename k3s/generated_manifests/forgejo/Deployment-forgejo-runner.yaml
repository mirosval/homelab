apiVersion: apps/v1
kind: Deployment
metadata:
  name: forgejo-runner
  namespace: forgejo
spec:
  replicas: 1
  selector:
    matchLabels:
      app: forgejo-runner
  template:
    metadata:
      labels:
        app: forgejo-runner
    spec:
      automountServiceAccountToken: true
      containers:
        - env:
            - name: DOCKER_TLS_CERTDIR
              value: /certs
          image: docker.io/docker:28.3.0-dind
          name: daemon
          securityContext:
            privileged: true
          volumeMounts:
            - mountPath: /certs
              name: docker-certs
        - args:
            - |
              while ! nc -z localhost 2376 </dev/null ; do
                echo 'waiting for docker daemon...' ;
                sleep 5 ;
                done ;
              forgejo-runner --config config.yml daemon
          command:
            - /bin/bash
            - -c
          env:
            - name: DOCKER_HOST
              value: tcp://localhost:2376
            - name: DOCKER_CERT_PATH
              value: /certs/client
            - name: DOCKER_TLS_VERIFY
              value: "1"
          image: code.forgejo.org/forgejo/runner:6.4.0
          name: runner
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            privileged: false
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            seccompProfile:
              type: RuntimeDefault
          volumeMounts:
            - mountPath: /certs
              name: docker-certs
            - mountPath: /data
              name: runner-data
            - mountPath: /tmp
              name: tmp
      initContainers:
        - args:
            - |
              while : ; do
                forgejo-runner register --no-interactive --token $(RUNNER_SECRET) --name $(RUNNER_NAME) --instance $(FORGEJO_INSTANCE_URL) && break ;
                sleep 1 ;
              done ;
              forgejo-runner generate-config > /data/config.yml ;
              sed -i -e "s|network: .*|network: host|" config.yml ;
              sed -i -e "s|^  envs:$$|  envs:\n    DOCKER_HOST: tcp://localhost:2376\n    DOCKER_TLS_VERIFY: 1\n    DOCKER_CERT_PATH: /certs/client|" config.yml ;
              sed -i -e "s|^  options:|  options: -v /certs/client:/certs/client|" config.yml ;
              sed -i -e "s|  valid_volumes: \[\]$$|  valid_volumes:\n    - /certs/client|" config.yml
          command:
            - /bin/bash
            - -c
          env:
            - name: RUNNER_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: RUNNER_SECRET
              valueFrom:
                secretKeyRef:
                  key: token
                  name: forgejo-runner
            - name: FORGEJO_INSTANCE_URL
              value: http://forgejo-http.forgejo.svc.cluster.local:3000
          image: code.forgejo.org/forgejo/runner:6.4.0
          name: runner-register
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            privileged: false
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            seccompProfile:
              type: RuntimeDefault
          volumeMounts:
            - mountPath: /data
              name: runner-data
      restartPolicy: Always
      volumes:
        - emptyDir: {}
          name: docker-certs
        - emptyDir: {}
          name: runner-data
        - emptyDir: {}
          name: tmp
