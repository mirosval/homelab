apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/instance: jellyfin
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: jellyfin
    app.kubernetes.io/version: 10.10.6
    helm.sh/chart: jellyfin-2.3.0
  name: jellyfin
  namespace: jellyfin
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: jellyfin
      app.kubernetes.io/name: jellyfin
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: jellyfin
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: jellyfin
        app.kubernetes.io/version: 10.10.6
        helm.sh/chart: jellyfin-2.3.0
    spec:
      containers:
        - image: docker.io/jellyfin/jellyfin:10.10.6
          imagePullPolicy: IfNotPresent
          livenessProbe:
            initialDelaySeconds: 10
            tcpSocket:
              port: http
          name: jellyfin
          ports:
            - containerPort: 8096
              name: http
              protocol: TCP
          readinessProbe:
            initialDelaySeconds: 10
            tcpSocket:
              port: http
          resources:
            limits:
              gpu.intel.com/i915: 1000m
          securityContext: {}
          volumeMounts:
            - mountPath: /config
              name: config
            - mountPath: /media
              name: media
      securityContext: {}
      serviceAccountName: jellyfin
      volumes:
        - name: config
          persistentVolumeClaim:
            claimName: jellyfin-config
        - name: media
          persistentVolumeClaim:
            claimName: pvc-movies-ro
